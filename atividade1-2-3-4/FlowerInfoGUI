package org.example;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

public class FlowerInfoGUI extends JFrame {
    private JTextField txtEspecieFlor, txtBiomaFlor, txtCorFlor, txtIdFlor;
    private JLabel lblImagemFlor, lblFraseFlor;
    private JButton btnGerarFraseFlor, btnTrocarParaPolvo;
    private JButton btnFazerFotossintese, btnCrescer, btnFlorescer, btnSalvarFlor, btnDeletarFlor, btnAtualizarFlor;

    private OctopusInfoGUI octopusInfoGUI;
    private CelularInfoGUI celularInfoGUI;

    public FlowerInfoGUI() {
        setTitle("Informações de Flores");
        setSize(400, 400);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);

        JPanel panelFlor = new JPanel();
        panelFlor.setLayout(new GridLayout(10, 2));

        panelFlor.add(new JLabel("ID:"));
        txtIdFlor = new JTextField();
        panelFlor.add(txtIdFlor);

        panelFlor.add(new JLabel("Espécie:"));
        txtEspecieFlor = new JTextField();
        panelFlor.add(txtEspecieFlor);

        panelFlor.add(new JLabel("Bioma:"));
        txtBiomaFlor = new JTextField();
        panelFlor.add(txtBiomaFlor);

        panelFlor.add(new JLabel("Cor:"));
        txtCorFlor = new JTextField();
        panelFlor.add(txtCorFlor);

        btnGerarFraseFlor = new JButton("Gerar Frase");
        btnGerarFraseFlor.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                gerarFraseFlor();
            }
        });
        panelFlor.add(btnGerarFraseFlor);

        lblFraseFlor = new JLabel();
        panelFlor.add(lblFraseFlor);

        lblImagemFlor = new JLabel();
        panelFlor.add(lblImagemFlor); // Adiciona o label da imagem ao painel

        // Função para exibir a imagem quando o botão "Gerar Frase" é clicado
        lblImagemFlor.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                gerarFraseFlor();
            }
        });

        // Exibe a imagem quando a interface é iniciada
        exibirImagem("default_flor.jpg");

        btnFazerFotossintese = new JButton("Fazer Fotossíntese");
        btnFazerFotossintese.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                lblFraseFlor.setText("A Flor " + txtEspecieFlor.getText() + " está fazendo fotossíntese");
            }
        });
        panelFlor.add(btnFazerFotossintese);

        btnCrescer = new JButton("Crescer");
        btnCrescer.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                lblFraseFlor.setText("A Flor " + txtCorFlor.getText() + " está crescendo");
            }
        });
        panelFlor.add(btnCrescer);

        btnFlorescer = new JButton("Florescer");
        btnFlorescer.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                lblFraseFlor.setText("A Flor no bioma " + txtBiomaFlor.getText() + " está florescendo");
            }
        });
        panelFlor.add(btnFlorescer);

        btnSalvarFlor = new JButton("Salvar");
        btnSalvarFlor.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                salvarFlor();
            }
        });
        panelFlor.add(btnSalvarFlor);

        btnDeletarFlor = new JButton("Deletar");
        btnDeletarFlor.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                deletarFlor();
            }
        });
        panelFlor.add(btnDeletarFlor);

        btnAtualizarFlor = new JButton("Atualizar");
        btnAtualizarFlor.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                atualizarFlor();
            }
        });
        panelFlor.add(btnAtualizarFlor);

        btnTrocarParaPolvo = new JButton("Ver Polvos");
        btnTrocarParaPolvo.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                octopusInfoGUI.setVisible(true);
                setVisible(false);
            }
        });
        panelFlor.add(btnTrocarParaPolvo);

        JButton btnTrocarParaCelulares = new JButton("Ver Celulares");
        btnTrocarParaCelulares.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                celularInfoGUI.setVisible(true);
                setVisible(false);
            }
        });
        panelFlor.add(btnTrocarParaCelulares);

        add(panelFlor);
        setVisible(true);

        octopusInfoGUI = new OctopusInfoGUI(this);
        celularInfoGUI = new CelularInfoGUI(this);
    }

    private void gerarFraseFlor() {
        String especie = txtEspecieFlor.getText();
        String bioma = txtBiomaFlor.getText();
        String cor = txtCorFlor.getText();

        String frase = "A flor " + cor + " da espécie " + especie + " do bioma " + bioma + ".";
        lblFraseFlor.setText(frase);

        exibirImagem(especie.toLowerCase() + ".jpg"); // Assume que o nome da imagem é o mesmo que o nome da espécie em minúsculas com extensão .jpg
    }

    private void exibirImagem(String imageName) {
        String imagePath = "imagens/" + imageName; // Pasta onde as imagens estão localizadas
        File file = new File(imagePath);
        if (file.exists()) {
            ImageIcon imageIcon = new ImageIcon(imagePath);
            Image image = imageIcon.getImage().getScaledInstance(150, 150, Image.SCALE_DEFAULT);
            lblImagemFlor.setIcon(new ImageIcon(image));
        } else {
            lblImagemFlor.setIcon(null);
            JOptionPane.showMessageDialog(this, "Imagem não encontrada: " + imageName, "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void salvarFlor() {
        String id = txtIdFlor.getText(); // Obtenha o valor do campo ID
        String especie = txtEspecieFlor.getText();
        String bioma = txtBiomaFlor.getText();
        String cor = txtCorFlor.getText();

        String sql = "INSERT INTO flores (id, especie, bioma, cor) VALUES (?, ?, ?, ?)";

        try (Connection conn = ConexaoBD.getConnection();
             PreparedStatement pstmt = conn.prepareStatement(sql)) {

            pstmt.setString(1, id); // Passe o valor do ID
            pstmt.setString(2, especie);
            pstmt.setString(3, bioma);
            pstmt.setString(4, cor);

            int rowsInserted = pstmt.executeUpdate();
            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(this, "Flor salva com sucesso!");
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erro ao salvar a flor.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void deletarFlor() {
        String idFlor = txtIdFlor.getText();

        String sql = "DELETE FROM flores WHERE id = ?";

        try (Connection conn = ConexaoBD.getConnection();
             PreparedStatement pstmt = conn.prepareStatement(sql)) {

            pstmt.setString(1, idFlor);

            int rowsDeleted = pstmt.executeUpdate();
            if (rowsDeleted > 0) {
                JOptionPane.showMessageDialog(this, "Flor deletada com sucesso!");
            } else {
                JOptionPane.showMessageDialog(this, "Nenhuma flor encontrada com o ID especificado.", "Aviso", JOptionPane.WARNING_MESSAGE);
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erro ao deletar a flor.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void atualizarFlor() {
        String id = txtIdFlor.getText();
        String especie = txtEspecieFlor.getText();
        String bioma = txtBiomaFlor.getText();
        String cor = txtCorFlor.getText();

        String sql = "UPDATE flores SET especie = ?, bioma = ?, cor = ? WHERE id = ?";

        try (Connection conn = ConexaoBD.getConnection();
             PreparedStatement pstmt = conn.prepareStatement(sql)) {

            pstmt.setString(1, especie);
            pstmt.setString(2, bioma);
            pstmt.setString(3, cor);
            pstmt.setString(4, id);

            int rowsUpdated = pstmt.executeUpdate();
            if (rowsUpdated > 0) {
                JOptionPane.showMessageDialog(this, "Flor atualizada com sucesso!");
            } else {
                JOptionPane.showMessageDialog(this, "Nenhuma flor encontrada com o ID especificado.", "Aviso", JOptionPane.WARNING_MESSAGE);
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erro ao atualizar a flor.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                new FlowerInfoGUI();
            }
        });
    }
} // Fechamento da classe FlowerInfoGUI
